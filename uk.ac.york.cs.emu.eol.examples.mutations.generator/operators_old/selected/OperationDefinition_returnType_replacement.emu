// operator: OperationDefinition_returnType-REP
// desc: replaces the returning type of an operation
//
// Inherited operators: n/a 
////////////////////////////////////////////////////////////

// 1.0: Primitive type to another primitive type
// 1.1: string to another type
// 1.1.1: string to integer
@action replace
@property returnType
pattern change_returnType_from_string2integer
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(StringType) {
	do {
		var new_type = IntegerType.createInstance();
		instance.returnType = new_type;
	}
}

// 1.1.2: string to real
@action replace
@property returnType
pattern change_returnType_from_string2real
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(StringType) {
	do {
		var new_type = RealType.createInstance();
		instance.returnType = new_type;
	}
}

// 1.1.3: string to boolean
@action replace
@property returnType
pattern change_returnType_from_string2boolean
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(StringType) {
	do {
		var new_type = BooleanType.createInstance();
		instance.returnType = new_type;
	}
}

// 1.2: integer to another type
// 1.2.1: integer to string
@action replace
@property returnType
pattern change_returnType_from_integer2string
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(IntegerType) {
	do {
		var new_type = String.createInstance();
		instance.returnType = new_type;
	}
}

// 1.2.2: integer to real
// 1.2: integer to another type
// 1.2.1: integer to real
@action replace
@property returnType
pattern change_returnType_from_integer2real
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(IntegerType) {
	do {
		var new_type = RealType.createInstance();
		instance.returnType = new_type;
	}
}

// 1.2.3: integer to boolean
@action replace
@property returnType
pattern change_returnType_from_integer2boolean
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(IntegerType) {
	do {
		var new_type = BooleanType.createInstance();
		instance.returnType = new_type;
	}
}

// 1.3: real to another type
// 1.3.1: real to string
@action replace
@property returnType
pattern change_returnType_from_real2string
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(RealType) {
	do {
		var new_type = StringType.createInstance();
		instance.returnType = new_type;
	}
}


// 1.3.2: real to integer
@action replace
@property returnType
pattern change_returnType_from_real2integer
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(RealType) {
	do {
		var new_type = IntegerType.createInstance();
		instance.returnType = new_type;
	}
}

// 1.3.3: real to boolean
@action replace
@property returnType
pattern change_returnType_from_real2boolean
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(RealType) {
	do {
		var new_type = BooleanType.createInstance();
		instance.returnType = new_type;
	}
}

// 1.4: boolean to another type
// 1.3.1: boolean to string
@action replace
@property returnType
pattern change_returnType_from_boolean2string
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(BooleanType) {
	do {
		var new_type = StringType.createInstance();
		instance.returnType = new_type;
	}
}

// 1.3.2: boolean to integer
@action replace
@property returnType
pattern change_returnType_from_boolean2integer
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(BooleanType) {
	do {
		var new_type = IntegerType.createInstance();
		instance.returnType = new_type;
	}
}

// 1.3.3: boolean to real
@action replace
@property returnType
pattern change_returnType_from_boolean2real
instance:OperationDefinition
	in:OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(BooleanType) {
	do {
		var new_type = RealType.createInstance();
		instance.returnType = new_type;
	}
}

// 2.0: Collection type to another collection type
// 2.1: sequence to another collectioin
// 2.1.1: sequence to set
@action replace
@property returnType
pattern change_collection_from_sequence2set
instance:OperationDefinition
	in: OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(SequenceType) {
	do {
		var new_col = SetType.createInstance();
		if(instance.returnType.contentType.isDefined())
			new_col.contentType = instance.returnType.contentType;
		instance.returnType = new_col; 
	}
}

// 2.1.2: sequence to ordered set
@action replace
@property returnType
pattern change_collection_from_sequence2orderedset
instance:OperationDefinition
	in: OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(SequenceType) {
	do {
		var new_col = OrderedSetType.createInstance();
		if(instance.returnType.contentType.isDefined())
			new_col.contentType = instance.returnType.contentType;
		instance.returnType = new_col; 
	}
}

// 2.2: set to another collectioin
// 2.2.1: set to sequence
@action replace
@property returnType
pattern change_collection_from_set2sequence
instance:OperationDefinition
	in: OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(SetType) {
	do {
		var new_col = SequenceType.createInstance();
		if(instance.returnType.contentType.isDefined())
			new_col.contentType = instance.returnType.contentType;
		instance.returnType = new_col; 
	}
}

// 2.2.2: set to ordered set
@action replace
@property returnType
pattern change_collection_from_set2orderedset
instance:OperationDefinition
	in: OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(SetType) {
	do {
		var new_col = OrderedSetType.createInstance();
		if(instance.returnType.contentType.isDefined())
			new_col.contentType = instance.returnType.contentType;
		instance.returnType = new_col; 
	}
}

// 2.3: ordered set to another collectioin
// 2.3.1: ordered set to sequence
@action replace
@property returnType
pattern change_collection_from_orderedset2sequence
instance:OperationDefinition
	in: OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(OrderedSetType) {
	do {
		var new_col = SequenceType.createInstance();
		if(instance.returnType.contentType.isDefined())
			new_col.contentType = instance.returnType.contentType;
		instance.returnType = new_col; 
	}
}

// 2.3.2: ordered set to set
@action replace
@property returnType
pattern change_collection_from_orderedset2set
instance:OperationDefinition
	in: OperationDefinition.all.select(e|e.returnType.isDefined()) 
	guard: instance.returnType.isTypeOf(OrderedSetType) {
	do {
		var new_col = SetType.createInstance();
		if(instance.returnType.contentType.isDefined())
			new_col.contentType = instance.returnType.contentType;
		instance.returnType = new_col; 
	}
}